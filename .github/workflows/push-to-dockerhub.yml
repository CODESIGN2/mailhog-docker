name: Publish to Dockerhub

on:
  schedule:
  - cron: '0 0 1 * 0'
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      mailhog_version:
        description: "Which release of mailhog github would you like to use?"
        default: latest
        required: true
      docker_tag:
        description: "Docker tag"
        default: snapshot
        required: true


jobs:
  crossbuild:
    runs-on: ubuntu-latest

    steps:
    - name: Prepare
      id: prepare
      run: |
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
        elif [[ $GITHUB_REF == refs/heads/main ]]; then
          echo "version=latest" >> $GITHUB_OUTPUT
        elif [[ -z "${{ github.event.inputs.docker_tag }}" ]]; then
          echo "version=snapshot" >> $GITHUB_OUTPUT
        else
          echo "version=${{ github.event.inputs.docker_tag }}" >> $GITHUB_OUTPUT
        fi
        if [[ -z "${{ github.event.inputs.mailhog_version }}" ]]; then
          echo "mailhog_version=latest" >> $GITHUB_OUTPUT
        else
          echo "mailhog_version=${{ github.event.inputs.mailhog_version }}" >> $GITHUB_OUTPUT
        fi
        echo "build_date=$(date +%s)" >> $GITHUB_OUTPUT
        echo "docker_platforms=linux/386,linux/amd64,linux/arm/v7,linux/arm/v6,linux/arm64" >> $GITHUB_OUTPUT
        echo "docker_image=${{ secrets.DOCKER_USERNAME }}/mailhog" >> $GITHUB_OUTPUT
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v3
    - name: Environment
      run: |
        echo home=$HOME
        echo git_ref=$GITHUB_REF
        echo git_sha=$GITHUB_SHA
        echo version=${{ steps.prepare.outputs.version }}
        echo mailhog_version=${{ steps.prepare.outputs.mailhog_version }}
        echo date=${{ steps.prepare.outputs.build_date }}
        echo image=${{ steps.prepare.outputs.docker_image }}
        echo platforms=${{ steps.prepare.outputs.docker_platforms }}
        echo avail_platforms=${{ steps.buildx.outputs.platforms }}
          # https://github.com/actions/checkout
    - name: Checkout
      uses: actions/checkout@v2
    - name: Login to dockerhub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
    - name: Docker Buildx (push)
      if: success()
      run: |
        docker buildx build \
          --platform ${{ steps.prepare.outputs.docker_platforms }} \
          --output "type=image,push=true" \
          --build-arg "VERSION=${{ steps.prepare.outputs.version }}" \
          --build-arg "MAILHOG_VERSION=${{ steps.prepare.outputs.mailhog_version }}" \
          --build-arg "BUILD_DATE=${{ steps.prepare.outputs.build_date }}" \
          --build-arg "VCS_REF=${GITHUB_SHA::8}" \
          --tag "${{ steps.prepare.outputs.docker_image }}:${{ steps.prepare.outputs.version }}" \
          --tag "${{ steps.prepare.outputs.docker_image }}:${{ steps.prepare.outputs.build_date }}" \
          --file Dockerfile .
    - name: Clear
      if: always()
      run: |
        rm -f ${HOME}/.docker/config.json
